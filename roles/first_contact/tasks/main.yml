- name: "Ping until alive {{ inventory_hostname }}"
  shell: "ping -c 1 -W 1 {{ ansible_ssh_host }}"
  register: ping
  until: ping.rc == 0
  retries: 20
  delay: 20
  delegate_to: localhost

- name: Pause for a minute for tftp load and reboot
  pause:
    minutes: 1

- name: Wait for port 22 to become open
  wait_for:
    port: 22
    host: "{{ ansible_ssh_host }}"
  delegate_to: localhost

- name: Save the configuration
  cli_command:
    command: "{{ config_write_command[ansible_network_os] }}"

- name: Reload the virtual appliance
  include: "{{ ansible_network_os }}.yml"

- name: "Ping until down {{ inventory_hostname }}"
  shell: "ping -c 1 -W 1 {{ ansible_ssh_host }}"
  register: ping
  until: ping.rc == 1
  retries: 20
  delay: 5
  delegate_to: localhost
  ignore_errors: True

- name: "Ping until alive {{ inventory_hostname }}"
  shell: "ping -c 1 -W 1 {{ ansible_ssh_host }}"
  register: ping
  until: ping.rc == 0
  retries: 20
  delay: 20
  delegate_to: localhost

- name: Wait for port 22 to become open
  wait_for:
    port: 22
    host: "{{ ansible_ssh_host }}"
  delegate_to: localhost

- name: Collect the device facts
  include: "facts/{{ ansible_network_os }}.yml"
  
- assert:
    that: ansible_facts['net_hostname'] == inventory_hostname
    success_msg: "{{ inventory_hostname }} has net_hostname {{ ansible_facts['net_hostname'] }}"
