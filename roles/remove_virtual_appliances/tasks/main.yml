- name: Get all virtual appliances
  virt:
    command: list_vms
  register: list_vms
  delegate_to: "{{ host }}"

- name: Get the info for each
  virt:
    name: "{{ inventory_hostname }}"
    command: info
  when: "inventory_hostname in list_vms['list_vms']"
  register: veos
  delegate_to: "{{ host }}"

- name: Destroy the virtual appliance
  virt:
    name: "{{ inventory_hostname }}"
    command: destroy
  when: "inventory_hostname in list_vms['list_vms'] and veos is defined and veos[inventory_hostname]['state'] == 'running'"
  delegate_to: "{{ host }}"
  changed_when: True

- name: Undefine the virtual appliance
  virt:
    name: "{{ inventory_hostname }}"
    command: undefine
  when: "inventory_hostname in list_vms['list_vms']"
  delegate_to: "{{ host }}"
  changed_when: True

- name: Remove directory for the virtual appliance on the host
  file:
    path: "{{ vm_directory }}/{{ inventory_hostname }}"
    state: absent
  delegate_to: "{{ host }}"

- name: Remove directory for the virtual appliance on the tftp server
  file:
    path: "{{ vm_directory }}/{{ inventory_hostname }}"
    state: absent
  delegate_to: "{{ tftp_server }}"
  when: "ansible_network_os in ['eos', 'nxos']"
